What happens when you initialize a repository? Why do you need to do it?

- Git starts to keep track of what happens on the depository, although once created there are no commits made automatically.

How is the staging area different from the working directory and the repository? What value do you think it offers?

- The staging area allows you to prepare the files for the next commit. The staging area is different because it is a way
to work with files without them being on the working directory of the repository.

How can you use the staging area to make sure you have one commit per logical change?

- You can use the staging area to prepare the files and send them according to the rule of one logical change per commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

- Branches are helpful when you want to try a new feature or a new version. By doing this you won't risk ruining the 
original and master branch. This way it becomes more flexible to try new features.

How do the diagrams help you visualize the branch structure?

- Diagrams help us visualize the branch structure because it is a visual way of keeping track of the branches that exist.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

- The result is that one branch will inherit all the commits from the other one. We represent it that way because one 
branch ceases to exist, so the connection makes only one branch continue on the graph.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

- Automatic may cause conflicts, and these conflicts can be repaired by manually merging them.